                                Spark SQL:
###########################################################################################
• Structured data is any data that has a schema — that is, a known set of fields for each record.
• Spark SQL provides a dataset abstraction that simplifies working with structured datasets.
  Dataset is similar to tables in a relational database.
• More and more Spark workflow is moving towards Spark SQL.
• Dataset has a natural schema, and this lets Spark store data in a more efficient manner and can
  run SQL queries on it using actual SQL commands.

 Important Spark SQL Concept
###########################################################################################
 • DataFrame
 • Dataset
###########################################################################################

DataFrame
---------
• Spark SQL introduces a tabular data abstraction called DataFrame since Spark 1.3
• A DataFrame is a data abstraction or a domain-specific language for working with
  structured and semi-structured data.
• DataFrames store data in a more efficient manner than native RDDs, taking advantage of their schema.
• It uses the immutable, in-memory, resilient, distributed and parallel capabilities of RDD,
  and applies a structure called schema to the data, allowing Spark to manage the schema and only
  pass data between nodes, in a much more efficient way than using Java serialization.
• Unlike an RDD, data


Dataset
-------
• The Dataset API, released since Spark 1.6, it provides:
    – the familiar object-oriented programming style
    – compile-time type safety of the RDD API
    – the benefits of leveraging schema to work with structured data
• A dataset is a set of structured data, not necessarily a row but it could be of a particular type.
• Java and Spark will know the type of the data in a dataset at compile time.


DataFrame and Dataset
###################################################################################
• Starting in Spark 2.0, DataFrame APIs merge with Dataset APIs.
• Dataset takes on two distinct APIs characteristics: a strongly-typed API and an untyped API.
• Consider DataFrame as untyped view of a Dataset, which is a Dataset of Row where a Row is a
  generic untyped JVM object.
• Dataset, by contrast, is a collection of strongly-typed JVM objects.
